apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: image-throughput-slo-controller
    tier: control-plane
  name: image-throughput-slo-controller
  namespace: polaris
spec:
  selector:
    matchLabels:
      component: image-throughput-slo-controller
      tier: control-plane
  replicas: 1
  template:
    metadata:
      labels:
        component: image-throughput-slo-controller
        tier: control-plane
    spec:
      serviceAccountName: image-throughput-slo-controller
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  # Ensure that the controller is only scheduled on Intel 64-bit nodes.
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
      tolerations:
        # Ensure that the controller can be scheduled on master nodes.
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
      # We need access to the host's network to allow us to access the RAINBOW services deployed there.
      hostNetwork: true
      containers:
        - image: polarissloc/image-throughput-slo-controller:latest
          name: slo-controller
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
          env:
            # The hostname and port of the RAINBOW Distributed Data Storage service:
            - name: RAINBOW_STORAGE_HOST
              value: localhost
            - name: RAINBOW_STORAGE_PORT
              value: "50000"
            # Workaround for an issue with kubernetes-client when using IPv6 (https://github.com/kubernetes-client/javascript/issues/599)
            - name: KUBERNETES_SERVICE_HOST
              value: kubernetes.default.svc
          securityContext:
            privileged: false
