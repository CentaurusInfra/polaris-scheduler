# This is a modified version of the demo application used for the Fogify emulator.
# Original Fogify demo: https://github.com/UCY-LINC-LAB/fogify-demo
apiVersion: v1
kind: Namespace
metadata:
  name: taxi-demo
---
# Secret for pulling container images from a private registry (optional).
# The .dockerconfigjson string is simply the base64 encoded version of a .docker/config.json file, which contains username and password in plain text.
# For more details on how to create the string, see https://github.com/kubernetes/kubernetes/blob/397ff0b3cb2d674113f3cb8195e044ebdf88d27b/staging/src/k8s.io/kubectl/pkg/cmd/create/create_secret_docker.go#L290
# The example is the result of running the following command:
# kubectl create secret docker-registry -n taxi-demo rainbow-regcred --docker-server=registry.gitlab.com --docker-username=test --docker-password=1234 --docker-email=test@rainbow-h2020.eu
apiVersion: v1
kind: Secret
metadata:
  name: rainbow-regcred
  namespace: taxi-demo
data:
  .dockerconfigjson: eyJhdXRocyI6eyJyZWdpc3RyeS5naXRsYWIuY29tIjp7InVzZXJuYW1lIjoidGVzdCIsInBhc3N3b3JkIjoiMTIzNCIsImVtYWlsIjoidGVzdEByYWluYm93LWgyMDIwLmV1IiwiYXV0aCI6ImRHVnpkRG94TWpNMCJ9fX0=
type: kubernetes.io/dockerconfigjson
---
apiVersion: fogapps.k8s.rainbow-h2020.eu/v1
kind: ServiceGraph

metadata:
  name: taxi-demo
  namespace: taxi-demo # All resources are created in this namespace

spec:
  # List of ServiceGraphNodes
  nodes:
    # Taxi Cloud Node
    - name: taxi-cloud
      labels:
        app.kubernetes.io/name: taxi-test
        app.kubernetes.io/version: "0.0.1"
        app.kubernetes.io/component: taxi-cloud
        app.kubernetes.io/instance: taxi-cloud
      containers:
        - name: taxi-async
          image: gcr.io/google-containers/pause:3.2
          resources:
            limits:
              memory: "1Gi"
              cpu: "1000m"
          env:
            - name: NODE_TYPE
              value: CLOUD_NODE
          volumeMounts:
            # Not needed by taxi-cloud, but to have a more complete example.
            - mountPath: /cache
              name: cache-volume
      imagePullSecrets:
        # Optional references to secrets for pulling container images from private registries.
        - name: rainbow-regcred
      volumes:
        # List of Kubernetes Volume objects
        - name: cache-volume
          emptyDir: {}
      replicas:
        # Configures the instance counts.
        min: 1
        max: 4
        initialCount: 2
        setType: Simple
      exposedPorts:
        # Configures ports exposed by this ServiceGraphNode
        type: ClusterInternal
        ports:
          - name: main
            port: 8080
        # Optionally, use the host node's network namespace
        hostNetwork: true
      nodeHardware:
        # Configures the hardware requirements that the node must fulfill.
        # Note that this does not reserve the hardware for exclusive usage, it only assures that the node has this hardware.
        cpuInfo:
          # This service supports only Intel 64-bit CPUs
          # Multiple supported architectures are also possible.
          # If no CPU architectures are specified, this means that all architectures are supported.
          architectures:
            - amd64
      slos:
        # SLOs for this node.
        - name: cpu-usage
          sloType:
            apiVersion: slo.polaris-slo-cloud.github.io/v1
            kind: CPUUsageSloMapping
          elasticityStrategy:
            apiVersion: elasticity.polaris-slo-cloud.github.io/v1
            kind: HorizontalElasticityStrategy
          sloConfig:
            targetAvgCPUUtilizationPercentage: 70
          # Optional configuration of the stabilization window, within which the elasticity strategy will not be executed twice.
          stabilizationWindow:
            scaleUpSeconds: 40
            scaleDownSeconds: 60

    # Taxi IoT Node
    - name: taxi-iot
      labels:
        app.kubernetes.io/name: taxi-test
        app.kubernetes.io/version: "0.0.1"
        app.kubernetes.io/component: taxi-iot
        app.kubernetes.io/instance: taxi-iot
      containers:
        - name: taxi
          image: gcr.io/google-containers/pause:3.2
          resources:
            limits:
              memory: "256Mi"
              cpu: "250m"
          env:
            - name: NODE_TYPE
              value: IOT_NODE
      replicas:
        min: 2
        max: 10
      nodeHardware:
        cpuInfo:
          architectures:
            - arm64

    # Taxi Edge Bronx Node
    - name: taxi-edge-bronx
      labels:
        app.kubernetes.io/name: taxi-test
        app.kubernetes.io/version: "0.0.1"
        app.kubernetes.io/component: taxi-edge
        app.kubernetes.io/instance: taxi-edge-bronx
      # Optional affinity specification
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: rainbow-h2020.eu/devices-camera
                operator: Exists
      containers:
        - name: taxi
          image: gcr.io/google-containers/pause:3.2
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
          env:
            - name: NODE_TYPE
              value: EDGE_NODE
            - name: REGION
              value: bronx
      replicas:
        max: 1
      nodeHardware:
        cpuInfo:
          architectures:
            - amd64
            - arm64
      slos:
        - name: image-throughput
          sloType:
            apiVersion: slo.k8s.rainbow-h2020.eu/v1
            kind: ImageThroughputSloMapping
          elasticityStrategy:
            apiVersion: elasticity.polaris-slo-cloud.github.io/v1
            kind: HorizontalElasticityStrategy
          sloConfig:
            targetImagesPerMinute: 600
            minCpuUsage: 80
          # Optional configuration of the stabilization window, within which the elasticity strategy will not be executed twice.
          stabilizationWindow:
            scaleUpSeconds: 40
            scaleDownSeconds: 60

    # Taxi Edge Brooklyn Node
    - name: taxi-edge-brooklyn
      labels:
        app.kubernetes.io/name: taxi-test
        app.kubernetes.io/version: "0.0.1"
        app.kubernetes.io/component: taxi-edge
        app.kubernetes.io/instance: taxi-edge-brooklyn
      containers:
        - name: taxi
          image: gcr.io/google-containers/pause:3.2
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
          env:
            - name: NODE_TYPE
              value: EDGE_NODE
            - name: REGION
              value: brooklyn
      replicas:
        max: 1

  # List of directed ServiceLinks that connect the above nodes.
  links:
    - source: taxi-iot
      target: taxi-edge-bronx
      qosRequirements:
        # Specifying QoS requirements is optional (none of them are required).
        linkType:
          protocol: HTTP
          minQualityClass: QC1Mbps
        throughput:
          minBandwidthKbps: 1000
          maxBandwidthVariance: 200
        latency:
          maxPacketDelayMsec: 100
          maxPacketDelayVariance: 80 # Jitter
        packetLoss:
          # The maximum packet loss in basis points (bp).
          # 1 bp = 0.01%
          maxPacketLossBp: 1
    - source: taxi-iot
      target: taxi-edge-brooklyn
    - source: taxi-edge-bronx
      target: taxi-cloud
    - source: taxi-edge-brooklyn
      target: taxi-cloud

  # Optional DNS Configuration for all pods created from this ServiceGraph
  # dnsConfig:
  #   dnsPolicy: None
  #   nameservers:
  #     - 8.8.8.8

  # Application-wide Service Level Objectives
  # slos:

  # Application-wide RAINBOW services
  # rainbowServices:
